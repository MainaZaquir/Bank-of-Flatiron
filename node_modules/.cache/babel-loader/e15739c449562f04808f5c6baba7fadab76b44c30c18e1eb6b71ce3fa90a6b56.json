{"ast":null,"code":"var _jsxFileName = \"/home/thenest/Moringa/Development/Code/code-challenges/Code-challenge-4/Bank-of-Flatiron/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TransactionTable from './components/TransactionTable';\nimport TransactionForm from './components/TransactionForm';\nimport NavBar from './components/bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetch(' http://localhost:3000/transactions').then(Response => Response.json()).then(data => setTransactions(data));\n  }, []);\n  const addTransaction = transaction => {\n    const maxId = Math.max(...transactions.map(t => t.id));\n    transaction.id = maxId + 1;\n    setTransactions([...transactions, transaction]);\n  };\n  const deleteTransaction = id => {\n    setTransactions(transactions.filter(transaction => transaction.id !== id));\n  };\n  const filteredTransactions = transactions.fiter(transaction => transaction.description.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionTable, {\n      transactions: filteredTransactions,\n      deleteTransaction: deleteTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TJdUscyMgtOJRF9rZmcbRXPgMXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TransactionTable","TransactionForm","NavBar","jsxDEV","_jsxDEV","App","_s","transactions","setTransactions","searchTerm","setSearchTerm","fetch","then","Response","json","data","addTransaction","transaction","maxId","Math","max","map","t","id","deleteTransaction","filter","filteredTransactions","fiter","description","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/thenest/Moringa/Development/Code/code-challenges/Code-challenge-4/Bank-of-Flatiron/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TransactionTable from './components/TransactionTable';\nimport TransactionForm from './components/TransactionForm';\nimport NavBar from './components/bar';\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetch(' http://localhost:3000/transactions')\n      .then((Response) => Response.json())\n      .then((data) => setTransactions(data));\n  }, []);\n\n  const addTransaction = (transaction) => {\n    const maxId = Math.max(...transactions.map(t => t.id));\n    transaction.id = maxId + 1;\n    \n    setTransactions([...transactions, transaction]);\n  };\n\n  const deleteTransaction = (id) => {\n    setTransactions(transactions.filter((transaction) => transaction.id !== id));\n  };\n\n  const filteredTransactions = transactions.fiter((transaction) =>\n    transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <NavBar setSearchTerm={setSearchTerm} />\n      <TransactionForm addTransaction={addTransaction} />\n      <TransactionTable\n        transactions={filteredTransactions}\n        deleteTransaction={deleteTransaction}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,eAAe,CAACO,IAAI,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtC,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGb,YAAY,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAAC;IACtDN,WAAW,CAACM,EAAE,GAAGL,KAAK,GAAG,CAAC;IAE1BV,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEU,WAAW,CAAC,CAAC;EACjD,CAAC;EAED,MAAMO,iBAAiB,GAAID,EAAE,IAAK;IAChCf,eAAe,CAACD,YAAY,CAACkB,MAAM,CAAER,WAAW,IAAKA,WAAW,CAACM,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMG,oBAAoB,GAAGnB,YAAY,CAACoB,KAAK,CAAEV,WAAW,IAC1DA,WAAW,CAACW,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,UAAU,CAACoB,WAAW,CAAC,CAAC,CACzE,CAAC;EAED,oBACEzB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA,CAACF,MAAM;MAACQ,aAAa,EAAEA;IAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxChC,OAAA,CAACH,eAAe;MAACe,cAAc,EAAEA;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDhC,OAAA,CAACJ,gBAAgB;MACfO,YAAY,EAAEmB,oBAAqB;MACnCF,iBAAiB,EAAEA;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9B,EAAA,CAnCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}